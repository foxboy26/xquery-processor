/* Generated By:JJTree&JavaCC: Do not edit this line. XQueryParserConstants.java */
package parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface XQueryParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int DOC = 5;
  /** RegularExpression Id. */
  int TEXT = 6;
  /** RegularExpression Id. */
  int EQ = 7;
  /** RegularExpression Id. */
  int IS = 8;
  /** RegularExpression Id. */
  int AND = 9;
  /** RegularExpression Id. */
  int OR = 10;
  /** RegularExpression Id. */
  int NOT = 11;
  /** RegularExpression Id. */
  int FOR = 12;
  /** RegularExpression Id. */
  int IN = 13;
  /** RegularExpression Id. */
  int LET = 14;
  /** RegularExpression Id. */
  int WHERE = 15;
  /** RegularExpression Id. */
  int SOME = 16;
  /** RegularExpression Id. */
  int EMPTY = 17;
  /** RegularExpression Id. */
  int SATISFIES = 18;
  /** RegularExpression Id. */
  int RETURN = 19;
  /** RegularExpression Id. */
  int JOIN = 20;
  /** RegularExpression Id. */
  int COMMA = 21;
  /** RegularExpression Id. */
  int ASSIGN = 22;
  /** RegularExpression Id. */
  int STRING = 23;
  /** RegularExpression Id. */
  int TAGNAME = 24;
  /** RegularExpression Id. */
  int VAR = 25;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"doc\"",
    "\"text()\"",
    "<EQ>",
    "<IS>",
    "\"and\"",
    "\"or\"",
    "\"not\"",
    "\"for\"",
    "\"in\"",
    "\"let\"",
    "\"where\"",
    "\"some\"",
    "\"empty\"",
    "\"satisfies\"",
    "\"return\"",
    "\"join\"",
    "\",\"",
    "\":=\"",
    "<STRING>",
    "<TAGNAME>",
    "<VAR>",
    "\"(\"",
    "\")\"",
    "\"/\"",
    "\"//\"",
    "\"[\"",
    "\"]\"",
    "\"*\"",
    "\".\"",
    "\"..\"",
    "\"<\"",
    "\">\"",
    "\"{\"",
    "\"}\"",
  };

}
